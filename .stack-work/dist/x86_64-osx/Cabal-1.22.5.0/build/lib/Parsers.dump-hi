
==================== FINAL INTERFACE ====================
2016-09-16 14:56:19.861165 UTC

interface goodg_GBdY7oRp6g78bKpCLQAiTZ:Parsers 7103
  interface hash: d1e0bd34faed2ac70d9cccef4cc14ef4
  ABI hash: dbb218d6d76f76a274d476b4b44d1829
  export-list hash: 9cd45d1a016eeef08ae56cd2cfa3f996
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a15922da834f2f01f7a0695d98ce9660
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parsers.<**
  Parsers.<**?
  Parsers.<+>
  Parsers.<||>
  Parsers.anyWord
  Parsers.echo
  Parsers.eow
  Parsers.maybeWord
  Parsers.notAlphaDigitSpace
  Parsers.opt
  Parsers.pzero
  Parsers.spaces
  Parsers.spaces1
  Parsers.star
  Parsers.word
module dependencies:
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE* base-4.8.2.0*
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne*
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
import  -/  attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Combinator 515b3551027b987cac85138dd4df58cf
import  -/  attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Internal b609c217e770d99be8cce1df76a251b4
import  -/  attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Internal.Types 5666cac24e0b48a98260952dee273fa1
import  -/  attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Text ef4522f4be13d2408762e9077e71bbfa
import  -/  attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Text.Internal 09cec9d6277802eed6513b06f40a903e
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:GHC.Unicode cdf84fc3abbaf34ba6b6645291cef991
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text b53ae191632883b10562be5cbaa0b22b
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show 081cc243e944015e37c793c3b0ebfefd
fixities infixr 9 <+>, infixr 8 <**?, infixr 8 <**, infixr 8 <||>
17c3d4f276f028b3a6f5833e3056ca9e
  $wa ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   ww :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w3 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.Text.Internal.Text
                             (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                             r
                     {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U>,
                        Unfolding: InlineRule (5, True, False)
                                   (\ t' :: Data.Attoparsec.Internal.Types.State
                                              Data.Text.Internal.Text
                                      pos' :: Data.Attoparsec.Internal.Types.Pos
                                      more' :: Data.Attoparsec.Internal.Types.More
                                      strs :: [GHC.Base.String]
                                      msg4 :: GHC.Base.String ->
                                    w2
                                      t'
                                      pos'
                                      more'
                                      (GHC.Types.: @ GHC.Base.String Parsers.anyWord5 strs)
                                      msg4) -}
                   = \ t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text
                       pos' :: Data.Attoparsec.Internal.Types.Pos
                       more' :: Data.Attoparsec.Internal.Types.More
                       strs :: [GHC.Base.String]
                       msg4 :: GHC.Base.String ->
                     w2
                       t'
                       pos'
                       more'
                       (GHC.Types.: @ GHC.Base.String Parsers.anyWord5 strs)
                       msg4
                 } in
                 (Data.Attoparsec.Combinator.$s$fAlternativeParser_$s$fApplicativeParser_$c*>
                    @ Data.Text.Internal.Text
                    @ Data.Text.Internal.Text
                    Parsers.anyWord3
                      `cast`
                    (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                              <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R))
                    Parsers.anyWord2
                      `cast`
                    (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                              <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)))
                   `cast`
                 (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                      <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)
                   @ r
                   w
                   (GHC.Types.I# ww)
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                   w1
                   lose
                   (\ t' :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                      pos' :: Data.Attoparsec.Internal.Types.Pos
                      more' :: Data.Attoparsec.Internal.Types.More
                      a11 :: Data.Text.Internal.Text ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww1 { GHC.Types.I# ww2 ->
                    Parsers.$wa1
                      @ r
                      t'
                      ww2
                      more'
                      lose
                      (\ t'1 :: Data.Attoparsec.Internal.Types.State
                                  Data.Text.Internal.Text
                         _pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                         more'1 :: Data.Attoparsec.Internal.Types.More[OneShot]
                         a12 :: Data.Text.Internal.Text[OneShot] ->
                       w3
                         t'1
                         ww1 `cast` (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                         more'1
                         a11) })) -}
d006fc78215fd8ef5f1352d54a1c53cf
  $wa1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b4a2b91fdaaf4fb5ad9785f42a70b168
  $wa2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
7a3b427fe9da73f1c08820ad9b729fe2
  $wa3 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 4,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   ww :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 Parsers.$wa4
                   @ r
                   w
                   ww
                   w1
                   (\ t' :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                      pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                      more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                      a11 :: [GHC.Types.Char][OneShot] ->
                    w2 t' pos' more' Parsers.anyWord4)) -}
0805058cda685dead39a3160ed7f5119
  $wa4 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 4,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b518f00eadb25b51b718afefb32e69ed
  $wa5 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   ww :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w3 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 let {
                   a8 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 Parsers.$wa1
                   @ r
                   w
                   ww
                   w1
                   w2
                   (\ t' :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                      _pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                      more' :: Data.Attoparsec.Internal.Types.More[OneShot] ->
                    w3
                      t'
                      a8 `cast` (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                      more')) -}
dc7a75365c95a1951a6d5510115b8642
  $wa6 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
22d18f9802c2a3cd1f46e5467dbe168f
  $wa7 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         GHC.Types.Char
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3ef6af700598f828072ad3ac5daf04be
  $wa8 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   ww :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w3 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 Parsers.$wa6
                   @ r
                   w
                   ww
                   w1
                   (\ t' :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                      pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                      more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                      strs :: [GHC.Base.String][OneShot]
                      msg4 :: GHC.Base.String[OneShot] ->
                    w2
                      t'
                      pos'
                      more'
                      (GHC.Types.:
                         @ GHC.Base.String
                         (GHC.Types.[] @ GHC.Types.Char)
                         strs)
                      msg4)
                   w3) -}
e476bb76d89fe5a34bb16f3817d01f2c
  $wa9 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   ww :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w3 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 Parsers.$wa
                   @ r
                   w
                   ww
                   w1
                   w2
                   (\ t' :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                      pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                      more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                      a11 :: Data.Text.Internal.Text[OneShot] ->
                    w3 t' pos' more' Parsers.star_x)) -}
100c5d46e1b8f061e6d4f1595e33f6b0
  $wecho :: Data.Attoparsec.Text.Internal.Parser a -> GHC.Base.String
  {- Arity: 1,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))>,
     Inline: [0],
     Unfolding: (\ @ a8 w :: Data.Attoparsec.Text.Internal.Parser a8 ->
                 case w `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                           <Data.Text.Internal.Text>_N <a8>_R)
                        @ GHC.Prim.Any
                        Parsers.<||>3
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])))
                        Parsers.<**3
                          `cast`
                        (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                        Data.Attoparsec.Internal.Types.Incomplete
                        (Data.Attoparsec.Text.Internal.failK @ GHC.Prim.Any)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text GHC.Prim.Any>_R)
                        (Parsers.echo1 @ a8) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                   -> case ds1 of wild1 {
                        [] -> GHC.Types.[] @ GHC.Types.Char : ipv ipv1 -> ipv }
                   Data.Attoparsec.Internal.Types.Partial c
                   -> case c Data.Text.Internal.empty_ of wild1 {
                        Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                        -> case ds1 of wild2 {
                             [] -> GHC.Types.[] @ GHC.Types.Char : ipv ipv1 -> ipv }
                        Data.Attoparsec.Internal.Types.Partial ipv
                        -> case Parsers.<**1 ret_ty GHC.Base.String of {}
                        Data.Attoparsec.Internal.Types.Done ds r -> Parsers.<||>1 }
                   Data.Attoparsec.Internal.Types.Done ds r -> Parsers.<||>1 }) -}
29a4afd8d7742d36a3008fb56f719d55
  (<**) ::
    Data.Attoparsec.Text.Internal.Parser a
    -> Data.Text.Internal.Text -> Data.Either.Either GHC.Base.String a
  {- Arity: 2,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,1*U(U,U,U)>,
     Unfolding: (\ @ a8
                   p :: Data.Attoparsec.Text.Internal.Parser a8
                   t :: Data.Text.Internal.Text ->
                 case p `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                           <Data.Text.Internal.Text>_N <a8>_R)
                        @ a8
                        (Data.Attoparsec.Text.Buffer.buffer t)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])))
                        Parsers.<**3
                          `cast`
                        (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                        Data.Attoparsec.Internal.Types.Incomplete
                        (Data.Attoparsec.Text.Internal.failK @ a8)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text a8>_R)
                        (Data.Attoparsec.Text.Internal.successK @ a8)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> a8
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text a8>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                   -> case ds1 of wild1 {
                        [] -> Parsers.<**2 @ a8
                        : ipv ipv1 -> Data.Either.Left @ GHC.Base.String @ a8 ipv }
                   Data.Attoparsec.Internal.Types.Partial c
                   -> case c Data.Text.Internal.empty_ of wild1 {
                        Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                        -> case ds1 of wild2 {
                             [] -> Parsers.<**2 @ a8
                             : ipv ipv1 -> Data.Either.Left @ GHC.Base.String @ a8 ipv }
                        Data.Attoparsec.Internal.Types.Partial ipv -> Parsers.<**1 @ a8
                        Data.Attoparsec.Internal.Types.Done ds r
                        -> Data.Either.Right @ GHC.Base.String @ a8 r }
                   Data.Attoparsec.Internal.Types.Done ds r
                   -> Data.Either.Right @ GHC.Base.String @ a8 r }) -}
004b6c9721652f3f912d80323f1139da
  <**1 :: Data.Either.Either GHC.Base.String a
  {- Strictness: b -}
ace59805188ec01e8c99728b904e32d4
  <**2 :: Data.Either.Either GHC.Base.String a
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ a8 ->
                 Data.Either.Left
                   @ GHC.Base.String
                   @ a8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
113cf12d92a659821fc1d53d7ec41f11
  <**3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0) -}
ba9c1190a942515c01c2839e3ed321d6
  (<**?) ::
    Data.Attoparsec.Text.Internal.Parser a
    -> Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,1*U(U,U,U)>,
     Unfolding: (\ @ a8
                   p :: Data.Attoparsec.Text.Internal.Parser a8
                   t :: Data.Text.Internal.Text ->
                 case p `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                           <Data.Text.Internal.Text>_N <a8>_R)
                        @ a8
                        (Data.Attoparsec.Text.Buffer.buffer t)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])))
                        Parsers.<**3
                          `cast`
                        (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                        Data.Attoparsec.Internal.Types.Incomplete
                        (Data.Attoparsec.Text.Internal.failK @ a8)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text a8>_R)
                        (Data.Attoparsec.Text.Internal.successK @ a8)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> a8
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text a8>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                   -> case ds1 of wild1 { DEFAULT -> GHC.Types.False }
                   Data.Attoparsec.Internal.Types.Partial c
                   -> case c Data.Text.Internal.empty_ of wild1 {
                        Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                        -> case ds1 of wild2 { DEFAULT -> GHC.Types.False }
                        Data.Attoparsec.Internal.Types.Partial ipv
                        -> case Parsers.<**1 ret_ty GHC.Types.Bool of {}
                        Data.Attoparsec.Internal.Types.Done ds r -> GHC.Types.True }
                   Data.Attoparsec.Internal.Types.Done ds r -> GHC.Types.True }) -}
d7b58228a5fafbbb2babed7de6bea16a
  (<+>) ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 2,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))> -}
dfe9174f5da6de86f517319b26b95665
  (<||>) ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 2,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: (\ p :: Data.Attoparsec.Text.Internal.Parser
                          Data.Text.Internal.Text
                   q :: Data.Attoparsec.Text.Internal.Parser
                          Data.Text.Internal.Text ->
                 let {
                   msg0 :: GHC.Base.String
                   = GHC.Base.++
                       @ GHC.Types.Char
                       (Parsers.<||>_$secho p)
                       (GHC.CString.unpackAppendCString# "|"# (Parsers.<||>_$secho q))
                 } in
                 (\ @ r
                    t :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                    pos :: Data.Attoparsec.Internal.Types.Pos
                    more :: Data.Attoparsec.Internal.Types.More
                    lose :: Data.Attoparsec.Internal.Types.Failure
                              Data.Text.Internal.Text
                              (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                              r
                    succ :: Data.Attoparsec.Internal.Types.Success
                              Data.Text.Internal.Text
                              (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                              Data.Text.Internal.Text
                              r ->
                  let {
                    lose1 :: Data.Attoparsec.Internal.Types.Failure
                               Data.Text.Internal.Text
                               (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                               r
                      {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U>,
                         Unfolding: InlineRule (5, True, False)
                                    (\ t' :: Data.Attoparsec.Internal.Types.State
                                               Data.Text.Internal.Text
                                       pos' :: Data.Attoparsec.Internal.Types.Pos
                                       more' :: Data.Attoparsec.Internal.Types.More
                                       strs :: [GHC.Base.String]
                                       msg4 :: GHC.Base.String ->
                                     lose
                                       t'
                                       pos'
                                       more'
                                       (GHC.Types.: @ GHC.Base.String msg0 strs)
                                       msg4) -}
                    = \ t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text
                        pos' :: Data.Attoparsec.Internal.Types.Pos
                        more' :: Data.Attoparsec.Internal.Types.More
                        strs :: [GHC.Base.String]
                        msg4 :: GHC.Base.String ->
                      lose t' pos' more' (GHC.Types.: @ GHC.Base.String msg0 strs) msg4
                  } in
                  p `cast`
                  (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                       <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)
                    @ r
                    t
                    pos
                    more
                    (\ t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text
                       _pos' :: Data.Attoparsec.Internal.Types.Pos
                       more' :: Data.Attoparsec.Internal.Types.More
                       _ctx :: [GHC.Base.String]
                       _msg :: GHC.Base.String ->
                     q `cast`
                     (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)
                       @ r
                       t'
                       pos
                       more'
                       lose1
                       succ)
                    succ)
                   `cast`
                 (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                           <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R))) -}
e411ce0ea22998d13f467597fc329258
  <||>1 :: GHC.Base.String
  {- Strictness: b -}
2e79d4623b4a6aab4747c4326ddb12d4
  <||>2 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.IResult
         Data.Text.Internal.Text GHC.Prim.Any
  {- Arity: 4,
     Unfolding: (\ t' :: Data.Attoparsec.Internal.Types.State
                           Data.Text.Internal.Text
                   pos' :: Data.Attoparsec.Internal.Types.Pos
                   more' :: Data.Attoparsec.Internal.Types.More
                   a27 :: Data.Text.Internal.Text ->
                 case pos'
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                 Data.Attoparsec.Internal.Types.Fail
                   @ Data.Text.Internal.Text
                   @ GHC.Prim.Any
                   (case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])) of wild { Data.Attoparsec.Text.Buffer.Buf dt dt1 dt2 dt3 dt4 ->
                    Data.Text.Internal.Text
                      dt
                      (GHC.Prim.+# dt1 ipv1)
                      (GHC.Prim.-# dt2 ipv1) })
                   (GHC.Types.[] @ GHC.Base.String)
                   Parsers.<||>_msg1 }) -}
f976a7b51896febffcb2b0e970d27b27
  <||>3 :: Data.Attoparsec.Text.Buffer.Buffer
  {- Unfolding: (case Data.Text.Internal.empty of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 Data.Attoparsec.Text.Buffer.Buf dt dt1 dt2 dt2 0 }) -}
b9d481f092557049c54036c254378c57
  <||>_$secho ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))>,
     Unfolding: (\ p :: Data.Attoparsec.Text.Internal.Parser
                          Data.Text.Internal.Text ->
                 case p `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                           <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)
                        @ GHC.Prim.Any
                        Parsers.<||>3
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])))
                        Parsers.<**3
                          `cast`
                        (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                        Data.Attoparsec.Internal.Types.Incomplete
                        (Data.Attoparsec.Text.Internal.failK @ GHC.Prim.Any)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text GHC.Prim.Any>_R)
                        Parsers.<||>2 of wild {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                   -> case ds1 of wild1 {
                        [] -> GHC.Types.[] @ GHC.Types.Char : ipv ipv1 -> ipv }
                   Data.Attoparsec.Internal.Types.Partial c
                   -> case c Data.Text.Internal.empty_ of wild1 {
                        Data.Attoparsec.Internal.Types.Fail ds ds1 ds2
                        -> case ds1 of wild2 {
                             [] -> GHC.Types.[] @ GHC.Types.Char : ipv ipv1 -> ipv }
                        Data.Attoparsec.Internal.Types.Partial ipv
                        -> case Parsers.<**1 ret_ty GHC.Base.String of {}
                        Data.Attoparsec.Internal.Types.Done ds r -> Parsers.<||>1 }
                   Data.Attoparsec.Internal.Types.Done ds r -> Parsers.<||>1 }) -}
4a42197dc52b185bfeec695918a87d86
  <||>_msg1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed reading: mzero"#) -}
73dad187c23aef022e785a91a8c04cfe
  anyWord ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.anyWord1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)) -}
bf01058f2bbde22a0556322b339abab3
  anyWord1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Parsers.$wa @ r w ww1 w2 w3 w4 }) -}
769ff8a7b64cf09b7f6dcc7b55656283
  anyWord2 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U)><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Parsers.$wa2 @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
356eb1e4e5a06744b33f17fb46aeff1b
  anyWord3 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Parsers.$wa3 @ r w ww1 w2 w4 }) -}
a0bb6229db5b9d008306d46ba08cf8fc
  anyWord4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# " "#) -}
db61e1cfa1297d760b8dd1e2fbf18408
  anyWord5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
ff2bd30b865b0731f4e28fa642c7cc30
  echo ::
    GHC.Show.Show a =>
    Data.Attoparsec.Text.Internal.Parser a -> GHC.Base.String
  {- Arity: 2,
     Strictness: <L,A><C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a8
                   w :: GHC.Show.Show a8
                   w1 :: Data.Attoparsec.Text.Internal.Parser a8 ->
                 Parsers.$wecho @ a8 w1) -}
3c0d73c2834366eb2a7c542aff0acb27
  echo1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> a
    -> Data.Attoparsec.Internal.Types.IResult
         Data.Text.Internal.Text GHC.Prim.Any
  {- Arity: 4,
     Unfolding: (\ @ a8
                   t' :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   pos' :: Data.Attoparsec.Internal.Types.Pos
                   more' :: Data.Attoparsec.Internal.Types.More
                   a27 :: a8 ->
                 case pos'
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                 Data.Attoparsec.Internal.Types.Fail
                   @ Data.Text.Internal.Text
                   @ GHC.Prim.Any
                   (case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0])) of wild { Data.Attoparsec.Text.Buffer.Buf dt dt1 dt2 dt3 dt4 ->
                    Data.Text.Internal.Text
                      dt
                      (GHC.Prim.+# dt1 ipv1)
                      (GHC.Prim.-# dt2 ipv1) })
                   (GHC.Types.[] @ GHC.Base.String)
                   Parsers.<||>_msg1 }) -}
c7b6401e964c3a1d12e9674c5b3108aa
  eow :: Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.eow1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)) -}
e9ac94b59b3957d474e9166c3a1e8250
  eow1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Parsers.$wa5 @ r w ww1 w2 w3 w4 }) -}
27e334140b0574317280beaed01fe06c
  maybeWord ::
    GHC.Base.String
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: GHC.Base.String -> Parsers.opt (Parsers.word x)) -}
a424e63962c285891da3e35cc2de4715
  notAlphaDigitSpace ::
    Data.Attoparsec.Text.Internal.Parser GHC.Types.Char
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.notAlphaDigitSpace1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <GHC.Types.Char>_R)) -}
3da87d041bd377d12b5f8704237f4262
  notAlphaDigitSpace1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         GHC.Types.Char
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           GHC.Types.Char
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Parsers.$wa7 @ r w ww1 w2 w3 w4 }) -}
77cbeff2083d80d912633cc3706c4acc
  opt ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: (\ p :: Data.Attoparsec.Text.Internal.Parser
                          Data.Text.Internal.Text ->
                 let {
                   msg0 :: GHC.Base.String
                   = GHC.CString.unpackAppendCString#
                       "("#
                       (GHC.Base.++ @ GHC.Types.Char (Parsers.<||>_$secho p) Parsers.opt1)
                 } in
                 (\ @ r
                    t :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                    pos :: Data.Attoparsec.Internal.Types.Pos
                    more :: Data.Attoparsec.Internal.Types.More
                    lose :: Data.Attoparsec.Internal.Types.Failure
                              Data.Text.Internal.Text
                              (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                              r
                    succ :: Data.Attoparsec.Internal.Types.Success
                              Data.Text.Internal.Text
                              (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                              Data.Text.Internal.Text
                              r ->
                  let {
                    lvl8 :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                            -> Data.Attoparsec.Internal.Types.Pos
                            -> Data.Attoparsec.Internal.Types.More
                            -> [GHC.Base.String]
                            -> GHC.Base.String
                            -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
                      {- Arity: 5 -}
                    = \ t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text
                        pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                        more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                        strs :: [GHC.Base.String][OneShot]
                        msg4 :: GHC.Base.String[OneShot] ->
                      lose
                        t'
                        pos'
                        more'
                        (GHC.Types.:
                           @ GHC.Base.String
                           msg0
                           (GHC.Types.:
                              @ GHC.Base.String
                              (GHC.Types.[] @ GHC.Types.Char)
                              strs))
                        msg4
                  } in
                  p `cast`
                  (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                       <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)
                    @ r
                    t
                    pos
                    more
                    (\ t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text
                       _pos' :: Data.Attoparsec.Internal.Types.Pos
                       more' :: Data.Attoparsec.Internal.Types.More
                       _ctx :: [GHC.Base.String]
                       _msg :: GHC.Base.String ->
                     case pos
                            `cast`
                          (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                     Parsers.$wa6 @ r t' ww1 more' lvl8 succ })
                    succ)
                   `cast`
                 (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                           <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R))) -}
215e36eff14ef44915e169b31835675d
  opt1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ")"#) -}
1fa49730df0844cd042701204a8a35ae
  pzero ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,U><L,U><L,U><L,A><C(C(C(C(S)))),1*C1(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.pzero1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)) -}
f725fede654455833b2ab5fb39c06723
  pzero1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U><L,U><L,U><L,A><C(C(C(C(S)))),1*C1(C1(C1(C1(U))))>,
     Unfolding: InlineRule (5, True, True)
                (\ @ r
                   t :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   pos :: Data.Attoparsec.Internal.Types.Pos
                   more :: Data.Attoparsec.Internal.Types.More
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.Text.Internal.Text
                             (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                             r
                   succ :: Data.Attoparsec.Internal.Types.Success
                             Data.Text.Internal.Text
                             (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                             Data.Text.Internal.Text
                             r ->
                 succ t pos more Data.Text.Internal.empty_) -}
d50f30b0613950e38cc2ffc316ebe5c5
  spaces ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.anyWord3
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)) -}
ca8143203ebc8b5ea12d4fe0cf348cae
  spaces1 ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.spaces2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)) -}
b214fb77ae83dcd204ea7dc951b744e1
  spaces2 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Parsers.$wa8 @ r w ww1 w2 w3 w4 }) -}
be38cddc2b78ca7424b8486f35c86b44
  star ::
    Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Parsers.star1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_R)) -}
1014fbd0ed82e5265f37cc84ef1fbb7e
  star1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Data.Text.Internal.Text
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.Text.Internal.Text
                           (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                           Data.Text.Internal.Text
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 Parsers.$wa9 @ r w ww1 w2 w3 w4 }) -}
ffa12e0abd857324cdab7fc9ac5d27da
  star_x :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "*"#) -}
0b19afd031281b74a86aefbf082a9445
  word ::
    GHC.Base.String
    -> Data.Attoparsec.Text.Internal.Parser Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U> -}
"SPEC echo @ Text" [ALWAYS] forall $dShow :: GHC.Show.Show
                                               Data.Text.Internal.Text
  Parsers.echo @ Data.Text.Internal.Text $dShow = Parsers.<||>_$secho
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

