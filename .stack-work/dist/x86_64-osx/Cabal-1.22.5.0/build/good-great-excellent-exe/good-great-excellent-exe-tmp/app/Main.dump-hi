
==================== FINAL INTERFACE ====================
2016-10-31 16:42:22.836345 UTC

interface main@main:Main 7103
  interface hash: 941d4a9fb85287053a905189c4973183
  ABI hash: ad8fa6ec76280f9215c0409d34224330
  export-list hash: f0a994587f60ce74c105a26e505c6ad0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f8c694548b2debe1f8faf3f9ee47371f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.close
  Main.collect
  Main.config_l
  Main.config_r
  Main.corpus_l
  Main.corpus_r
  Main.dim
  Main.first
  Main.known
  Main.main
  Main.main_count_words
  Main.near
  Main.patterns_l
  Main.patterns_r
  Main.pset
  Main.suffi
  Main.sysConfig
module dependencies: Core Query Score Scripts ScrubData Src
package dependencies: StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE base-4.8.2.0
                      base16-bytestring-0.1.1.6@base1_LuxBhYgEONMHJnKTOPc7Oy
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      chunked-data-0.2.0@chunk_9sFQnevMt1h0cKlKzGg6j9
                      comonad-4.2.7.2@comon_5wEqfQVXg9MGfIPxSKfS4M
                      conduit-1.2.7@condu_6OSrnRI6RqIGBv7ZPG9IV6
                      conduit-combinators-1.0.4@condu_7Sl3OMpnWsVLWFpLSSxlOn
                      conduit-extra-1.1.13.2@condu_ErVEtE0OOPvEOsJa6HCflV
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_7gFjdZ6ciei9744gjZQMHp
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      dlist-instances-0.1.1.1@dlist_Fd4HoN0wfg6JUJW6l75mr9
                      exceptions-0.8.3@excep_BEih2K3eMGTE4cg5iulra8
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m
                      free-4.12.4@free_D8pop1Lncn7BkE4zjJTjla ghc-prim-0.4.0.0
                      good-great-excellent-0.1.0.0@goodg_7yTcpPp20HH7TrsrNkfgsn
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi
                      keys-3.11@keys_ISfE7aax3NK7g9j8vHODvp
                      lifted-base-0.2.3.8@lifte_27kQ9DytVyu5Pw2So1Igy3
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      mono-traversable-0.10.2@monot_0dkMOYm8fHd9L9cwfTpxhR
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      pointed-4.2.0.2@point_GCsPRSrANuo0hdJRNI2bbb
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu
                      resourcet-1.1.7.5@resou_165wgeXO1n8BEqynSK393U
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      semigroupoids-5.0.1@semig_GRN7TOS9fx09tFw63gc4EK
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      streaming-commons-0.1.15.5@strea_2a9C3L0IVZc79BZaLNwyzG
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      vector-algorithms-0.7.0.1@vecto_2O3XZ6glbAwDmJCc3dC3Ee
                      vector-instances-3.3.1@vecto_2T0r79ha7oGAyaK2s9EYKN
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         dlist-instances-0.1.1.1@dlist_Fd4HoN0wfg6JUJW6l75mr9:Data.DList.Instances
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-instances-3.3.1@vecto_2T0r79ha7oGAyaK2s9EYKN:Data.Vector.Instances
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8:Data.Functor.Rep
                         attoparsec-0.13.0.2@attop_F2JR8EcnzjH8eSBi5YocsE:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Wrapped
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         keys-3.11@keys_ISfE7aax3NK7g9j8vHODvp:Data.Key
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mono-traversable-0.10.2@monot_0dkMOYm8fHd9L9cwfTpxhR:Data.MinLen
                         mono-traversable-0.10.2@monot_0dkMOYm8fHd9L9cwfTpxhR:Data.MonoTraversable
                         mono-traversable-0.10.2@monot_0dkMOYm8fHd9L9cwfTpxhR:Data.Sequences
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.5@resou_165wgeXO1n8BEqynSK393U:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
                         vector-instances-3.3.1@vecto_2T0r79ha7oGAyaK2s9EYKN:Data.Vector.Instances
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.Traversable 7576318f4ef8587ad947f87012b65abf
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  conduit-extra-1.1.13.2@condu_ErVEtE0OOPvEOsJa6HCflV:Data.Conduit.Text d3bf92cbb1501548eef313b83348e07c
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set 7116dff3002cb8f8fc1c63ac63f4ea50
import  -/  directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm:System.Directory a90331b0d3a954e7d46e510cba448504
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  good-great-excellent-0.1.0.0@goodg_7yTcpPp20HH7TrsrNkfgsn:Lib 0301c5700e9448ef902e2e513359fbd2
import  -/  Core 2ef28469fa6aa0ab3e755b56582fa0dc
  Config caee52235134b93db772134968b2cb0c
  config 0c7ab785f80c9ea306179e5451c95c5f
  corpus 57709cdf300123cbb006a8f7893457fb
  strongWeak a545015f55d64d1f0e5b537be90da55e
  weakStrong 2bf1477d9d7b9fb03fe2de502900480e
import  -/  Scripts 396f8616933848aa209ec7605150ea8d
  exports: d5f249c601f0b9d7ffd9dad7ca900e68
  count_phrase b341d33a97eff62e389472eca9192bc7
  count_words 84896d419b83dba6d3bc1aa519065659
import  -/  Src 043ce5d1b9279ad97154192bc3ce217e
  exports: 7dd1c9e808743eb86045aedb0a40fb58
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text b53ae191632883b10562be5cbaa0b22b
12a50abb5595572944143147fa06fa19
  $wpset :: [a] -> [(a, a)]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ @ a1 w :: [a1] ->
                 letrec {
                   go :: [a1] -> [(a1, a1)] {- Arity: 1, Strictness: <S,1*U> -}
                   = \ ds :: [a1] ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (a1, a1)
                       : y ys
                       -> let {
                            z :: [(a1, a1)] = go ys
                          } in
                          letrec {
                            go1 :: [a1] -> [(a1, a1)] {- Arity: 1, Strictness: <S,1*U> -}
                            = \ ds1 :: [a1] ->
                              case ds1 of wild1 {
                                [] -> z : y1 ys1 -> GHC.Types.: @ (a1, a1) (y, y1) (go1 ys1) }
                          } in
                          go1 w }
                 } in
                 go w) -}
e58ab1f0362240f84a625fede53b409f
  close :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.close5
                   Main.close1) -}
842ae5ae12e422a89a1f4c53b4cb72b5
  close1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.close4
                   Main.close2) -}
661e3cc6c476714f8a9ae8b455829967
  close2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.close3
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
5a7d9f3569a81267b6209e6ffc2bf89b
  close3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "intimate"#) -}
d83fd6ef6ce563221cbaa26ec01a5ff8
  close4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "near"#) -}
e90e744efab1fce72646fa4f27f7edd5
  close5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "close"#) -}
7ff9ed0956b0531214e9b3415f3914ff
  collect :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.collect1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
40ee84009a0319ecd2c63b40fb64a87d
  collect1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ wrds :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Posix.Directory.getWorkingDirectory1
                        eta of ds { (#,#) ipv ipv1 ->
                 case Main.collect7
                        (GHC.List.$wunsafeTake @ GHC.Types.Char 6 ipv1)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case Main.collect4 wrds ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 let {
                   inpath :: Core.DirectoryPath
                   = case ipv3 of wild { Core.Con ds3 ds4 ds5 -> ds3 }
                 } in
                 let {
                   a1 :: [Core.PatternExpr]
                   = case ipv3 of wild { Core.Con ds3 ds4 ds5 -> ds5 }
                 } in
                 letrec {
                   a2 :: [(GHC.Base.String, GHC.Base.String)]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               [(GHC.Integer.Type.Integer, [Core.Output])] #)
                     {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ ds3 :: [(GHC.Base.String, GHC.Base.String)]
                       eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     case ds3 of wild {
                       []
                       -> (# eta1,
                             GHC.Types.[] @ (GHC.Integer.Type.Integer, [Core.Output]) #)
                       : y ys
                       -> case y of ww { (,) ww1 ww2 ->
                          case Scripts.$wa
                                 a1
                                 inpath
                                 Main.collect3
                                 ww1
                                 ww2
                                 eta1 of ds4 { (#,#) ipv6 ipv7 ->
                          case a2 ys ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                          (# ipv8,
                             GHC.Types.:
                               @ (GHC.Integer.Type.Integer, [Core.Output])
                               ipv7
                               ipv9 #) } } } }
                 } in
                 case a2 (Main.collect_$spset wrds) ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 let {
                   a3 :: [Core.PatternExpr]
                   = case ipv3 of wild { Core.Con ds4 ds5 ds6 -> ds5 }
                 } in
                 letrec {
                   a4 :: [(GHC.Base.String, GHC.Base.String)]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               [(GHC.Integer.Type.Integer, [Core.Output])] #)
                     {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ ds4 :: [(GHC.Base.String, GHC.Base.String)]
                       eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     case ds4 of wild {
                       []
                       -> (# eta1,
                             GHC.Types.[] @ (GHC.Integer.Type.Integer, [Core.Output]) #)
                       : y ys
                       -> case y of ww { (,) ww1 ww2 ->
                          case Scripts.$wa
                                 a3
                                 inpath
                                 Main.collect2
                                 ww1
                                 ww2
                                 eta1 of ds5 { (#,#) ipv8 ipv9 ->
                          case a4 ys ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                          (# ipv10,
                             GHC.Types.:
                               @ (GHC.Integer.Type.Integer, [Core.Output])
                               ipv9
                               ipv11 #) } } } }
                 } in
                 case a4 (Main.collect_$spset wrds) ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                 (# ipv8, GHC.Tuple.() #) } } } } }) -}
253772902f3ceb9e3f9aac929c193101
  collect10 ::
    GHC.Base.Maybe Core.Config
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Core.Config #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: GHC.Base.Maybe Core.Config
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild {
                   GHC.Base.Nothing -> GHC.IO.failIO1 @ Core.Config Main.collect11 eta
                   GHC.Base.Just con -> (# eta, con #) }) -}
497e8a9478052910a4466fab2434f082
  collect11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Main.hs:95:5-12"#) -}
3761a8c269d6247514bfbccd9699a81d
  collect12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/Users"#) -}
0aec6c824f69cb9ae02b441256359d67
  collect2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "weak"#) -}
eb08ceb7c439cab2e517a1c6e2e15568
  collect3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "strong"#) -}
1d3497b9249bd5e3478d687b7960fa52
  collect4 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: (\ xs :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Posix.Directory.getWorkingDirectory1
                        eta of ds { (#,#) ipv ipv1 ->
                 case Main.collect7
                        (GHC.List.$wunsafeTake @ GHC.Types.Char 6 ipv1)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case Scripts.count_words1
                        (case ipv3 of wild { Core.Con ds2 ds3 ds4 ->
                         GHC.Base.++ @ GHC.Types.Char ds2 Main.collect6 })
                        Main.collect5
                        xs
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } }) -}
f61d107091c56de0f403833758f26104
  collect5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "words"#) -}
7b7fcd0fe64ae711cfa8ea04a0652c38
  collect6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vocab.txt"#) -}
2e3ed23b0307f74273c5d2ca48e14fd5
  collect7 ::
    [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Core.Config #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ d :: [GHC.Types.Char]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Base.eqString d Main.collect12 of wild {
                   GHC.Types.False
                   -> case Core.config1
                             Main.corpus_r
                             Main.patterns_r
                             eta of ds1 { (#,#) ipv ipv1 ->
                      Main.collect10 ipv1 ipv }
                   GHC.Types.True
                   -> case Core.config1
                             Main.corpus_l
                             Main.patterns_l
                             eta of ds1 { (#,#) ipv ipv1 ->
                      Main.collect8 ipv1 ipv } }) -}
2b7f1eeb97d06332e258d478195c969f
  collect8 ::
    GHC.Base.Maybe Core.Config
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Core.Config #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: GHC.Base.Maybe Core.Config
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild {
                   GHC.Base.Nothing -> GHC.IO.failIO1 @ Core.Config Main.collect9 eta
                   GHC.Base.Just con -> (# eta, con #) }) -}
3d4b94d95d6d8f3543303f43092e0f76
  collect9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Main.hs:90:5-12"#) -}
99dcaf80550d8acda518d5f11f39471c
  collect_$spset ::
    [GHC.Base.String] -> [(GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ xs :: [GHC.Base.String] ->
                 letrec {
                   go :: [GHC.Base.String] -> [(GHC.Base.String, GHC.Base.String)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ ds :: [GHC.Base.String] ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (GHC.Base.String, GHC.Base.String)
                       : y ys
                       -> let {
                            z :: [(GHC.Base.String, GHC.Base.String)] = go ys
                          } in
                          letrec {
                            go1 :: [GHC.Base.String] -> [(GHC.Base.String, GHC.Base.String)]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ ds1 :: [GHC.Base.String] ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1
                                -> GHC.Types.:
                                     @ (GHC.Base.String, GHC.Base.String)
                                     (y, y1)
                                     (go1 ys1) }
                          } in
                          go1 xs }
                 } in
                 go xs) -}
d1bef858e6b4243cf4c8f7b4070ddb14
  config_l :: GHC.Types.IO Core.Config
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.config_l1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <Core.Config>_R)) -}
fb680735a28ca7d47865b615d2d61459
  config_l1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Core.Config #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Core.config1
                        Main.corpus_l
                        Main.patterns_l
                        s of ds1 { (#,#) ipv ipv1 ->
                 Main.collect8 ipv1 ipv }) -}
d233929a41e720c2a3eecf6b93a4f22a
  config_r :: GHC.Types.IO Core.Config
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.config_r1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <Core.Config>_R)) -}
fb3e3e05bb7b230d1c8114c0da4398b3
  config_r1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Core.Config #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Core.config1
                        Main.corpus_r
                        Main.patterns_r
                        s of ds1 { (#,#) ipv ipv1 ->
                 Main.collect10 ipv1 ipv }) -}
b070e8e1fafb2201d1dcbb1532abe25d
  corpus_l :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/lingxiao/Documents/research/data/ngrams/corpus/"#) -}
d5242c98aa66dab1055f401dc042c638
  corpus_r :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "/nlp/data/xiao/ngrams/corpus/"#) -}
4a1b4ac4da85d3cf5de52dd97d04b7a1
  dim :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ [GHC.Types.Char] Main.dim7 Main.dim1) -}
a5942bcddd2356b77f8d17a06424de15
  dim1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ [GHC.Types.Char] Main.dim6 Main.dim2) -}
90bf2576adada40e501110c4164d1255
  dim2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ [GHC.Types.Char] Main.dim5 Main.dim3) -}
25e51b019056e99d3acfa1c7367d7e92
  dim3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.dim4
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
64ed937c42635000c77f57d89b8e47e7
  dim4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "black"#) -}
9e3c927f03a54982627e4316b546fa43
  dim5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dark"#) -}
ceb7e0f4b4784874984ec28d41d3b9c2
  dim6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gloomy"#) -}
269cb1a744724c64cbf69ec98da96784
  dim7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dim"#) -}
9148f49e857f7f4d8f5fcfc48cc678a5
  first :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first15
                   Main.first1) -}
a2d9d5e4b25f5bcc932fe5bf33ac5127
  first1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first14
                   Main.first2) -}
e785d35a6fdf6b46683c6e3e6ce9159f
  first10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sixth"#) -}
57ffa6b30bfe786c8ccaf0428b167cea
  first11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fifth"#) -}
a8fbea348a960e63732b5fc38f1e9aac
  first12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fourth"#) -}
a331f6e2db136a1ed0391f279962193d
  first13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "third"#) -}
3b8287ba5742d07c2a4419c70722b00d
  first14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "second"#) -}
b8fce03e679265090aad5ebb1a1df2dc
  first15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "first"#) -}
05bf1bb189ff92434eec19971833f113
  first2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first13
                   Main.first3) -}
6e88b1c92c7ef87ea8d5d317669a071d
  first3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first12
                   Main.first4) -}
48cfb491afdc3129c0f7f6ac7918ed86
  first4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first11
                   Main.first5) -}
cb018eb35e123aa8b8dc6fec37147afc
  first5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first10
                   Main.first6) -}
56b393f34fc3ddf698266399d1feefa0
  first6 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first9
                   Main.first7) -}
244c196969b79d908962f89c7414ed12
  first7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.first8
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
4abe8297bd31d9960f8d9cd6cb48bffd
  first8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eighth"#) -}
13323cfbc2a5a13d966965e979b9068e
  first9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "seventh"#) -}
2d3c49dfdfe3db21781ce390f04578ca
  known :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.known5
                   Main.known1) -}
b3245e5869f12bb1f2bd7dc9f2facea3
  known1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.known4
                   Main.known2) -}
fbbad016a72cb2e4c52cd4ddbb24d6b9
  known2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.known3
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
e99f271cc7283920b3f80ac48604066b
  known3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "legendary"#) -}
17304c493dc76840449aa4c7d29f332e
  known4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "famous"#) -}
9904205406f7b6afcaff6c698fbeec12
  known5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "known"#) -}
6b0903853b68a53f14c515f855841ebf
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
748dd4d357adbd7a280acc88d743954d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Main.collect1 Main.suffi s of ds1 { (#,#) ipv ipv1 ->
                 case Main.collect1 Main.near ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Main.collect1 Main.dim ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Main.collect1 Main.known ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case Main.collect1 Main.first ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 Main.collect1 Main.close ipv8 } } } } }) -}
6a51505122478af579f87d3d16e93694
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
50ca1cffd173d8bedb96cb2902b2cd1a
  main_count_words :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.collect4
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
ec135a329f954dcf321b641b71553e93
  near :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.near5
                   Main.near1) -}
73def5b325df5d7cb057d12022a4be51
  near1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.close4
                   Main.near2) -}
b779daab0150e79cbc04a68363706fde
  near2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.close5
                   Main.near3) -}
47734d0b5b1a2cbe6e56784e67d7be12
  near3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.near4
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
4b448d4f7cf4a0a2416200d73141b9c5
  near4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "adjacent"#) -}
0fe33f38a8d90ae53c117cb926cf4b28
  near5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nearby"#) -}
a81752fcc002b5300e62729a5f732bc5
  patterns_l :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/lingxiao/Documents/research/code/good-great-excellent/inputs/"#) -}
ac5de24987aefe51211b1a7ed175ebac
  patterns_r :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home1/l/lingxiao/xiao/good-great-excellent/inputs/"#) -}
94440b3ecd30295bd09e3686c1d618bd
  pset :: GHC.Classes.Eq a => [a] -> [(a, a)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1 w :: GHC.Classes.Eq a1 w1 :: [a1] ->
                 Main.$wpset @ a1 w1) -}
dc804e63543609c4060785f04ae7820f
  suffi :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.suffi7
                   Main.suffi1) -}
d4252f891ef25683c8fc6ec3a0546af4
  suffi1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.suffi6
                   Main.suffi2) -}
934c261bcacc9db04870110149bd0b1a
  suffi2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.suffi5
                   Main.suffi3) -}
a91a68bf5deb5921f53af1a8651c8a4a
  suffi3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.suffi4
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
de7d41b62a7c5e9251e2d4c8f5d2ae1e
  suffi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "full"#) -}
30f628cc9aca74c91036af2312e4e1b8
  suffi5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wide"#) -}
15676343c0b0e5f654100d70f41cc67e
  suffi6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "good"#) -}
39fc68a51ca7cbc9175f7ac02da06460
  suffi7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sufficient"#) -}
ebd304d3d792de5fa3e68a724f80e10f
  sysConfig :: GHC.Types.IO Core.Config
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.sysConfig1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <Core.Config>_R)) -}
ced21482ae8921e520613af3aadd0a3b
  sysConfig1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Core.Config #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Posix.Directory.getWorkingDirectory1
                        s of ds { (#,#) ipv ipv1 ->
                 Main.collect7
                   (GHC.List.$wunsafeTake @ GHC.Types.Char 6 ipv1)
                   ipv }) -}
"SPEC pset @ String" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                               GHC.Base.String
  Main.pset @ [GHC.Types.Char] $dEq = Main.collect_$spset
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

